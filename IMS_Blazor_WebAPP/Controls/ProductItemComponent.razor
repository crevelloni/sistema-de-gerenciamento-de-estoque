@inject NavigationManager NavigationManager 
@inject IDeleteProductUseCase DeleteProductUseCase

@if (this.Product != null)
{
    <tr>
        <td>@Product.Name</td>
        <td>@Product.Quantity</td>
        <td>@Product.Price.ToString("c")</td>
        <td>
            <button type="button" class="Productbtn-light" @onclick="@(()=> EditProduct(Product.ProdutoId))">Edit</button>
            <button type="Product" class="btn btn-light" @onclick="@(async ()=> await DeleteProduct(Product))">Delete</button>
        </td>
    </tr>
}

@code {

    [Parameter]
    public EventCallback OnProductDeleted { get; set; }

    [Parameter]
    public Product? Product { get; set; }

    private void EditProduct(int productId)
    {
        NavigationManager.NavigateTo($"/editproduct/{productId}");
    }

    private async Task DeleteProduct(Product product)
    {
        await DeleteProductUseCase.ExecuteAsync(product.ProdutoId);

        await OnProductDeleted.InvokeAsync();

    }

}
