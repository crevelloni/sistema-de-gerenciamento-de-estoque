@page "/addproduct"
<h3>AddProduct</h3>
@inject IAddProductUseCase addProductUseCase 
@inject NavigationManager NavigationManager
<br/>

@if (this.product != null)
{
    
    <EditForm Model="product" OnValidSubmit="OnValidSubmit">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>

        <div class="form-group">
            <label for="name">Product Name</label>
            <InputText id="name" @bind-Value="product.Name" class="form-control"></InputText>
        </div>
        
        <div class="form-group">
            <label for="qty">Quantity</label>
            <InputNumber id="qty" @bind-Value="product.Quantity" class="form-control"></InputNumber>
        </div>
        
        <div class="form-group">
            <label for="price">Price</label>
            <InputNumber id="price" @bind-Value="product.Price" class="form-control"></InputNumber>
        </div>

        <ProductInventoriesComponent @ref="ProductInventoriesComponent"
        OnInventorySelected="OnInventorySelected"></ProductInventoriesComponent>

        <br/>
        <button type="submit" class="btn btn-primary">Save </button>

    </EditForm>
}

@code {

    private Product? product;

    private ProductInventoriesComponent ProductInventoriesComponent;

    protected override void OnInitialized()
    {
        this.product = new Product();
    }
    private async Task OnValidSubmit()
    {
        if (this.product is not null)
        {
            this.ProductInventoriesComponent.ProductInventories.ForEach(x =>
            {
                x.ProductId = this.product.ProdutoId;
            });
            this.product.ProductInventories = this.ProductInventoriesComponent.ProductInventories;


            await addProductUseCase.ExecuteAsync(product);
            NavigationManager.NavigateTo("/products");
        }       
    }
    private void OnInventorySelected(List<ProductInventory> productInventories)
    {
        this.product.ProductInventories = productInventories;
    } 

}